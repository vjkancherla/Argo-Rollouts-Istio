apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: demo-app
spec:
  replicas: 5
  strategy:
    canary:
      # Reference to a Service which the controller updates to point to the canary ReplicaSet
      canaryService: demo-app-service-canary
      # Reference to a Service which the controller updates to point to the stable ReplicaSet
      stableService: demo-app-service-stable
      trafficRouting:
        istio:
          # One or more virtualServices can be configured
          # Reference to a VirtualService which the controller updates with canary weights
          virtualServices:
          - name: demo-app-vsvc # At least one virtualService is required
            routes:
            - primary # At least one route is required
      
      # An AnalysisTemplate is referenced, starting from the second step, which starts an AnalysisRun after
      # the setWeight step. The rollout will not progress to the following step until the
      # AnalysisRun is complete. A failure/error of the analysis will cause the rollout's update to
      # abort, and set the canary weight to zero.
      analysis:
        templates:
        - templateName: random-fail
        - templateName: always-pass
        startingStep: 2                 # Start analysis after 25% traffic

      # Progressive rollout steps with analysis
      steps:
      - setWeight: 10                   # 10% canary traffic
      - pause: {duration: 2m}
      
      - setWeight: 25                   # 25% canary traffic  
      - pause: {duration: 1m}
      
      - setWeight: 50                   # 50% canary traffic
      - pause: {duration: 2m}
      
      - setWeight: 75                   # 75% canary traffic
      - pause: {duration: 1m}
      
      # 100% happens automatically after final analysis passes
      
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
      - name: demo-app
        image: nginx:1.20
        ports:
        - containerPort: 80
        env:
        - name: VERSION
          value: "v2.0"
        command: ["/bin/sh", "-c"]
        args: 
          - echo "<html><body><h1>Version - $(VERSION)</h1></body></html>" > /usr/share/nginx/html/index.html && exec nginx -g 'daemon off;'
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"